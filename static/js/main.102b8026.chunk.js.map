{"version":3,"sources":["components/Card.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","image","alt","style","left","top","transform","rotate","Table","state","deck_id","card_stack","remaining","dealCard","bind","axios","get","response","this","setState","data","then","url","leftVal","topVal","rotateVal","randLeft","Math","floor","random","length","randTop","randRotate","newCard","cards","onClick","map","card","images","png","value","suit","code","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAGaA,G,MAAO,SAACC,GACnB,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKC,IAAKF,EAAMG,MAAOC,IAAKJ,EAAMI,IAAKC,MAAO,CAACC,KAAMN,EAAMM,KAAO,IAAKC,IAAKP,EAAMO,IAAM,KAAMC,UAAU,2BAAD,OAA6BR,EAAMS,OAAnC,e,wBC4E9FC,E,kDA5Eb,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDW,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,UAAW,MAEb,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBAPC,E,sLAWL,gE,SACWC,IAAMC,IADjB,iE,OACNC,E,OACNC,KAAKC,SAAS,CACZT,QAASO,EAASG,KAAKV,U,iJAIL,IAAD,OACU,IAAzBQ,KAAKT,MAAMG,WACbG,IAAMC,IAAN,8CAAiDE,KAAKT,MAAMC,QAA5D,cAAgFW,MAAK,SAAAJ,GACnF,EAAKE,SAAS,CACZR,WAAY,GACZC,UAAW,Y,wKAOXU,E,8CAA6CJ,KAAKT,MAAMC,Q,2BACvCK,IAAMC,IAAIM,G,OAA3BL,E,OAEAM,EAAU,CAAC,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,GAAI,KAAM,IACvEC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACxCC,EAAY,EAAE,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACpFC,EAAWC,KAAKC,MAAMD,KAAKE,SAAWN,EAAQO,QAC9CC,EAAUJ,KAAKC,MAAMD,KAAKE,SAAWL,EAAOM,QAC5CE,EAAaL,KAAKC,MAAMD,KAAKE,SAAWJ,EAAUK,QAElDG,E,2BACDhB,EAASG,KAAKc,MAAM,I,IACvB9B,KAAMmB,EAAQG,GACdrB,IAAKmB,EAAOO,GACZxB,OAAQkB,EAAUO,KAGpBd,KAAKC,SAAS,CACZR,WAAW,GAAD,mBAAMO,KAAKT,MAAME,YAAjB,CAA6BsB,IACvCrB,UAAWK,EAASG,KAAKR,Y,sIAK3B,OACE,sBAAKb,UAAU,QAAf,UACE,6CACA,wBAAQoC,QAASjB,KAAKL,SAAtB,4BACA,yDAA4BK,KAAKT,MAAMG,aACpCM,KAAKT,MAAME,WAAWyB,KAAI,SAAAC,GACzB,OACE,cAAC,EAAD,CAEEpC,MAAOoC,EAAKC,OAAOC,IACnBrC,IAAG,UAAKmC,EAAKG,MAAV,YAAmBH,EAAKI,MAC3BrC,KAAMiC,EAAKjC,KACXC,IAAKgC,EAAKhC,IACVE,OAAQ8B,EAAK9B,QALR8B,EAAKK,gB,GA/DNC,aCOLC,MARf,WACE,OACE,qBAAK7C,UAAU,MAAf,SACE,cAAC,EAAD,OCKS8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.102b8026.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css';\n\nexport const Card = (props) => {\n  return(\n    <div className=\"Card\">\n      <img src={props.image} alt={props.alt} style={{left: props.left + '%', top: props.top + 'px', transform: `translateX(-50%) rotate(${props.rotate}deg)`}}/>\n    </div>\n  );\n};\n","import React, {Component} from 'react';\nimport { Card } from './Card';\nimport './Table.css';\nimport axios from 'axios';\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      deck_id: '',\n      card_stack: [],\n      remaining: null\n    }\n    this.dealCard = this.dealCard.bind(this);\n  }\n\n  async componentDidMount() {\n    const url = 'https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1';\n    const response = await axios.get(url);\n    this.setState({\n      deck_id: response.data.deck_id\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.remaining === 0) {\n      axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/shuffle/`).then(response => {\n        this.setState({\n          card_stack: [],\n          remaining: null\n        })\n      });\n    }\n  }\n\n  async dealCard() {\n    const url = `https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`;\n    const response = await axios.get(url);\n\n    const leftVal = [47, 47.5, 48, 48.5, 49, 49.5, 50, 50.5, 51, 51.5, 52, 52.5, 53];\n    const topVal = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const rotateVal = [-10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    const randLeft = Math.floor(Math.random() * leftVal.length);\n    const randTop = Math.floor(Math.random() * topVal.length);\n    const randRotate = Math.floor(Math.random() * rotateVal.length);\n\n    const newCard = {\n      ...response.data.cards[0],\n      left: leftVal[randLeft],\n      top: topVal[randTop],\n      rotate: rotateVal[randRotate]\n    };\n\n    this.setState({\n      card_stack: [...this.state.card_stack, newCard],\n      remaining: response.data.remaining,\n    });\n  }\n\n  render () {\n    return(\n      <div className=\"Table\">\n        <h1>Card Dealer</h1>\n        <button onClick={this.dealCard}>Deal me a card</button>\n        <p>Cards left in the deck: {this.state.remaining}</p>\n          {this.state.card_stack.map(card => {\n            return (\n              <Card \n                key={card.code}\n                image={card.images.png}\n                alt={`${card.value} ${card.suit}`}\n                left={card.left}\n                top={card.top}\n                rotate={card.rotate}\n              />\n            )\n          })}\n      </div>\n    );\n  }\n}\n\nexport default Table;","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}